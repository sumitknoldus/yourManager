{"version":3,"sources":["signup/signup.component.ts"],"names":[],"mappings":"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","file":"signup.component.js","sourcesContent":["import { Component, Input } from '@angular/core';\nimport { Router } from '@angular/router';\nimport {User} from '../shared/model/user';\nimport {SignupService} from './signup.service';\nimport 'rxjs/add/operator/map';\nimport 'rxjs/add/operator/catch';\nimport 'rxjs/add/operator/debounceTime';\nimport 'rxjs/add/operator/distinctUntilChanged';\nimport 'rxjs/add/operator/switchMap';\nimport 'rxjs/add/operator/toPromise';\nimport 'rxjs/add/observable/throw';\n\n@Component({\n  moduleId: module.id,\n  selector: 'ym-signup',\n  templateUrl: 'signup.component.html',\n  styleUrls: ['signup.component.css'],\n  providers: [SignupService]\n})\n\nexport class SignupComponent {\n\n  @Input()\n  user = {};\n\n  constructor(private router:Router, private signupService:SignupService) {\n\n  }\n\n  /**\n   * This method calls the service to verify the email and then calls the service\n   * to get the user signed up\n   * @param selectedUser\n   */\n  signup(selectedUser:User) {\n    selectedUser.role = 'user';\n    selectedUser.empId = '';\n\n    swal({\n      title: 'Loading...',\n        input:'info',\n      showConfirmButton: false\n    });\n\n    this.signupService.verification(selectedUser)\n      .subscribe(data => {\n          swal({\n            title: '<h4>Verification token has been sent on your Email.</h4>',\n            input: 'password',\n            inputAttributes: {\n              'maxlength': 10,\n              'autocapitalize': 'off',\n              'autocorrect': 'off'\n            },\n              inputValidator: function(value) {\n                  return new Promise(function(resolve, reject) {\n                      if (value !== '') {\n                          resolve();\n                      } else {\n                          reject('You cant left this field empty..!!');\n                      }\n                  });\n              }\n          }).then(password => {\n              this.signupService.signup(password)\n                .subscribe(data => {\n                    localStorage.setItem('user', JSON.stringify(data.user));\n                    localStorage.setItem('message', data.message);\n                    this.router.navigate(['admin/user']);\n                  },\n                  error => swal(\n                    'Error',\n                    ''+error,\n                    'error'\n                  ));\n          });\n        },\n        error => swal(\n          'Error',\n          ''+error,\n          'error'\n        ));\n  }\n\n  /**\n   * This method navigates the user to the login page\n   */\n  goBack() {\n    this.router.navigate(['login']);\n  }\n}\n"]}