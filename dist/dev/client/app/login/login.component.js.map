{"version":3,"sources":["login/login.component.ts"],"names":[],"mappings":";;;;;;;;;;AAAA,qBAAiC,eAAe,CAAC,CAAA;AACjD,qBAAqB,sBAAsB,CAAC,CAAA;AAC5C,8BAA2B,iBAAiB,CAAC,CAAA;AAC7C,uBAAuB,iBAAiB,CAAC,CAAA;AACzC,QAAO,2BAA2B,CAAC,CAAA;AAUnC;IAKE,wBAAoB,YAA0B,EAAU,MAAc;QAAlD,iBAAY,GAAZ,YAAY,CAAc;QAAU,WAAM,GAAN,MAAM,CAAQ;QAJ/D,aAAQ,GAAG,EAAE,CAAC;QAErB,SAAI,GAAG,EAAE,CAAC;IAE+D,CAAC;IAE1E;;;;OAIG;IACH,8BAAK,GAAL;QAAA,iBAqBC;QApBC,IAAI,CAAC,YAAY,CAAC,KAAK,CAAC,IAAI,CAAC,IAAI,CAAC;aAC/B,IAAI,CAAC,UAAA,IAAI;YACN,EAAE,CAAA,CAAC,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,KAAK,IAAI,CAAC,CAAC,CAAC;gBACjC,YAAY,CAAC,OAAO,CAAC,MAAM,EAAE,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,CAAC,CAAC;gBACnD,EAAE,CAAA,CAAC,IAAI,CAAC,IAAI,KAAK,MAAM,CAAC,CAAC,CAAC;oBACxB,KAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,YAAY,CAAC,CAAC,CAAC;gBACvC,CAAC;gBAAA,IAAI,CAAC,CAAC;oBACL,KAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,kBAAkB,CAAC,CAAC,CAAC;gBAC7C,CAAC;YACH,CAAC;YAAC,IAAI,CAAC,CAAC;gBACN,KAAI,CAAC,QAAQ,GAAG,oBAAoB,CAAC;YACvC,CAAC;QACH,CAAC,EACD,UAAA,KAAK,IAAI,OAAA,IAAI,CACX,OAAO,EACP,8BAA8B,EAC9B,OAAO,CACR,EAJQ,CAIR,CACF,CAAC;IAEN,CAAC;IAED;;OAEG;IACH,mCAAU,GAAV;QACE,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,QAAQ,CAAC,CAAC,CAAC;IACnC,CAAC;IAtCD;QAAC,YAAK,EAAE;;gDAAA;IAVV;QAAC,gBAAS,CAAC;YACT,QAAQ,EAAC,MAAM,CAAC,EAAE;YAClB,QAAQ,EAAE,UAAU;YACpB,WAAW,EAAE,sBAAsB;YACnC,SAAS,EAAC,CAAC,qBAAqB,CAAC;SAElC,CAAC;;sBAAA;IA2CF,qBAAC;AAAD,CAzCA,AAyCC,IAAA;AAzCY,sBAAc,iBAyC1B,CAAA","file":"login.component.js","sourcesContent":["import { Component, Input } from '@angular/core';\nimport { User } from '../shared/model/user';\nimport {LoginService} from './login.service';\nimport { Router } from '@angular/router';\nimport 'rxjs/add/observable/throw';\n\n@Component({\n  moduleId:module.id,\n  selector: 'ym-login',\n  templateUrl: 'login.component.html',\n  styleUrls:['login.component.css'],\n\n})\n\nexport class LoginComponent {\n  public errorMsg = '';\n  @Input() user:User;\n  user = {};\n\n  constructor(private loginService: LoginService, private router: Router) {}\n\n  /**\n   * This method is called when user clicks on login.\n   * It calls the service to get the user logged in,\n   * and redirects it to the page depending on the user role.\n   */\n  login() {\n    this.loginService.login(this.user)\n      .then(data => {\n          if(JSON.stringify(data) !== '{}') {\n            localStorage.setItem('user', JSON.stringify(data));\n            if(data.role === 'user') {\n              this.router.navigate(['admin/user']);\n            }else {\n              this.router.navigate(['admin/asset/list']);\n            }\n          } else {\n            this.errorMsg = 'Failed to login...';\n          }\n        },\n        error => swal(\n          'error',\n          'Invalid Username or Password',\n          'error'\n        )\n      );\n\n  }\n\n  /**\n   * this method navigates the user to sign up page.\n   */\n  goToSignup() {\n    this.router.navigate(['signup']);\n  }\n}\n\n"]}