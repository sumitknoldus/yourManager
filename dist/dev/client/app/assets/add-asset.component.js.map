{"version":3,"sources":["assets/add-asset.component.ts"],"names":[],"mappings":";;;;;;;;;;AAAA,qBAAiC,eAAe,CAAC,CAAA;AACjD,uBAAuB,iBAAiB,CAAC,CAAA;AACzC,sBAAoB,uBAAuB,CAAC,CAAA;AAC5C,8BAA2B,iBAAiB,CAAC,CAAA;AAC7C,QAAO,2BAA2B,CAAC,CAAA;AAanC;IAEE,2BAAoB,YAA0B,EAAU,MAAc;QAAlD,iBAAY,GAAZ,YAAY,CAAc;QAAU,WAAM,GAAN,MAAM,CAAQ;QAGtE,kBAAa,GAAG,CAAE,OAAO,EAAE,UAAU,EAAE,QAAQ,EAAE,SAAS,EAAE,SAAS,EAAE,cAAc,EAAE,KAAK,CAAC,CAAC;QAC9F,aAAQ,GAAY,KAAK,CAAC;QAC1B,oBAAe,GAAG;YAChB,cAAc,EAAE,EAAE;YAClB,SAAS,EAAC,CAAC;oBACT,SAAS,EAAE,EAAE;oBACb,GAAG,EAAC,EAAE;iBACP,CAAC;SACH,CAAC;QAGF,UAAK,GAAG,IAAI,aAAK,EAAE,CAAC;IAdoD,CAAC;IAgBzE;;;OAGG;IACH,kCAAM,GAAN,UAAO,KAAY;QAAnB,iBAcC;QAbC,KAAK,CAAC,SAAS,GAAG,KAAK,CAAC,SAAS,CAAC,OAAO,CAAC,OAAO,EAAE,EAAE,CAAC,CAAC;QACvD,KAAK,CAAC,WAAW,GAAG,IAAI,CAAC;QACzB,IAAI,CAAC,YAAY,CAAC,QAAQ,CAAC,KAAK,CAAC,CAAC,SAAS,CACzC,UAAA,GAAG;YACC,KAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,sBAAsB,CAAC,CAAC,CAAC;YAC/C,IAAI,CAAC,EAAI,KAAK,EAAE,2BAA2B,EAAI,IAAI,EAAE,yBAAyB,EAAI,KAAK,EAAE,IAAI,EAAI,iBAAiB,EAAE,KAAK,EAAE,CAAC,CAAC,IAAI,EAAE,CAAC;QACxI,CAAC,EAED,UAAA,KAAK,IAAK,OAAA,IAAI,CACZ,OAAO,EACP,EAAE,GAAC,IAAI,CAAC,SAAS,CAAC,KAAK,CAAC,EACxB,OAAO,CACR,EAJS,CAIT,CAAC,CAAA;IACN,CAAC;IArBD;QAAC,YAAK,EAAE;;oDAAA;IAtBV;QAAC,gBAAS,CAAC;YACT,QAAQ,EAAC,MAAM,CAAC,EAAE;YAClB,QAAQ,EAAE,cAAc;YACxB,WAAW,EAAE,0BAA0B;YACvC,SAAS,EAAE,CAAC,yBAAyB,CAAC;SACvC,CAAC;;yBAAA;IAyCF,wBAAC;AAAD,CAvCA,AAuCC,IAAA;AAvCY,yBAAiB,oBAuC7B,CAAA","file":"add-asset.component.js","sourcesContent":["import { Component, Input } from '@angular/core';\nimport { Router } from '@angular/router';\nimport {Asset} from \"../shared/model/asset\";\nimport {AssetService} from \"./asset.service\";\nimport 'rxjs/add/observable/throw';\nimport {DatePipe} from \"angular2/common\";\nimport {DateTime} from \"ng2-datetime-picker\";\nimport { Observable } from 'rxjs/Rx';\n\n\n@Component({\n  moduleId:module.id,\n  selector: 'ym-add-asset',\n  templateUrl: 'add-asset.component.html',\n  styleUrls: ['add-asset.component.css'],\n})\n\nexport class AddAssetComponent {\n\n  constructor(private assetService: AssetService, private router: Router){}\n\n\n  hardwareTypes = [ \"Mouse\", \"Keyboard\", \"Laptop\", \"Monitor\", \"Adapter\", \"Laptop Stand\", \"Bag\"];\n  isAssign: boolean = false;\n  availableAssets = {\n    availableStock: \"\",\n    assetList:[{\n      assetCode: \"\",\n      _id:\"\"\n    }]\n  };\n\n  @Input()\n  asset = new Asset();\n\n  /**\n   * This method calls the service method to add a new asset\n   * @param asset\n   */\n  submit(asset: Asset){\n    asset.assetCode = asset.assetCode.replace(/[\\s]/g, '');\n    asset.isAvailable = true;\n    this.assetService.addAsset(asset).subscribe(\n      res => {\n          this.router.navigate(['admin/asset/list-new']);\n          swal({   title: \"Asset successfully added.\",   text: \"Auto close in 1 second.\",   timer: 1000,   showConfirmButton: false }).done();\n      },\n\n      error =>  swal(\n        'Error',\n        ''+JSON.stringify(error),\n        'error'\n      ))\n  }\n\n\n}\n"]}