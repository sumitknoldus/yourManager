{"version":3,"sources":["assets/add-asset.component.ts"],"names":[],"mappings":";;;;;;;;;;AAAA,qBAAiC,eAAe,CAAC,CAAA;AACjD,uBAAuB,iBAAiB,CAAC,CAAA;AACzC,sBAAoB,uBAAuB,CAAC,CAAA;AAC5C,8BAA2B,iBAAiB,CAAC,CAAA;AAC7C,QAAO,2BAA2B,CAAC,CAAA;AAUnC;IAYE,2BAAoB,YAA0B,EAAU,MAAc;QAAlD,iBAAY,GAAZ,YAAY,CAAc;QAAU,WAAM,GAAN,MAAM,CAAQ;QAXtE,kBAAa,GAAG,CAAE,OAAO,EAAE,UAAU,EAAE,QAAQ,EAAE,SAAS,EAAE,SAAS,EAAE,cAAc,EAAE,KAAK,CAAC,CAAC;QAC9F,aAAQ,GAAY,KAAK,CAAC;QAExB,UAAK,GAAG,IAAI,aAAK,EAAE,CAAC;QACpB,oBAAe,GAAG;YACd,cAAc,EAAE,EAAE;YAClB,SAAS,EAAC,CAAC;oBACP,SAAS,EAAE,EAAE;oBACb,GAAG,EAAC,EAAE;iBACT,CAAC;SACL,CAAC;IACsE,CAAC;IAE3E;;;OAGG;IACH,kCAAM,GAAN,UAAO,KAAY;QAAnB,iBAuBC;QAtBC,KAAK,CAAC,SAAS,GAAG,KAAK,CAAC,SAAS,CAAC,OAAO,CAAC,OAAO,EAAE,EAAE,CAAC,CAAC;QACvD,KAAK,CAAC,WAAW,GAAG,IAAI,CAAC;QACzB,IAAI,CAAC,YAAY,CAAC,QAAQ,CAAC,KAAK,CAAC,CAAC,SAAS,CACzC,UAAA,GAAG;YACC,KAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,sBAAsB,CAAC,CAAC,CAAC;YAE/C,IAAI,CACE;gBACI,KAAK,EAAE,2BAA2B;gBAClC,IAAI,EAAE,yBAAyB;gBAC/B,KAAK,EAAE,IAAI;gBACX,iBAAiB,EAAE,KAAK;aAC3B,CACN,CAAC,IAAI,EAAE,CAAC;QAEb,CAAC,EAED,UAAA,KAAK,IAAK,OAAA,IAAI,CACZ,OAAO,EACP,EAAE,GAAC,IAAI,CAAC,SAAS,CAAC,KAAK,CAAC,EACxB,OAAO,CACR,EAJS,CAIT,CAAC,CAAC;IACP,CAAC;IAtCC;QAAC,YAAK,EAAE;;oDAAA;IAVZ;QAAC,gBAAS,CAAC;YACT,QAAQ,EAAC,MAAM,CAAC,EAAE;YAClB,QAAQ,EAAE,cAAc;YACxB,WAAW,EAAE,0BAA0B;YACvC,SAAS,EAAE,CAAC,yBAAyB,CAAC;SACvC,CAAC;;yBAAA;IA8CF,wBAAC;AAAD,CA5CA,AA4CC,IAAA;AA5CY,yBAAiB,oBA4C7B,CAAA","file":"add-asset.component.js","sourcesContent":["import { Component, Input } from '@angular/core';\nimport { Router } from '@angular/router';\nimport {Asset} from '../shared/model/asset';\nimport {AssetService} from './asset.service';\nimport 'rxjs/add/observable/throw';\n\n\n@Component({\n  moduleId:module.id,\n  selector: 'ym-add-asset',\n  templateUrl: 'add-asset.component.html',\n  styleUrls: ['add-asset.component.css'],\n})\n\nexport class AddAssetComponent {\n  hardwareTypes = [ 'Mouse', 'Keyboard', 'Laptop', 'Monitor', 'Adapter', 'Laptop Stand', 'Bag'];\n  isAssign: boolean = false;\n    @Input()\n    asset = new Asset();\n    availableAssets = {\n        availableStock: '',\n        assetList:[{\n            assetCode: '',\n            _id:''\n        }]\n    };\n  constructor(private assetService: AssetService, private router: Router) { }\n\n  /**\n   * This method calls the service method to add a new asset\n   * @param asset\n   */\n  submit(asset: Asset) {\n    asset.assetCode = asset.assetCode.replace(/[\\s]/g, '');\n    asset.isAvailable = true;\n    this.assetService.addAsset(asset).subscribe(\n      res => {\n          this.router.navigate(['admin/asset/list-new']);\n\n          swal(\n                {\n                    title: 'Asset successfully added.',\n                    text: 'Auto close in 1 second.',\n                    timer: 1000,\n                    showConfirmButton: false\n                }\n          ).done();\n\n      },\n\n      error =>  swal(\n        'Error',\n        ''+JSON.stringify(error),\n        'error'\n      ));\n  }\n\n\n}\n"]}