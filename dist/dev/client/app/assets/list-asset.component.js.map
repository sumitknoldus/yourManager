{"version":3,"sources":["assets/list-asset.component.ts"],"names":[],"mappings":"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","file":"list-asset.component.js","sourcesContent":["import { Component, Input, OnInit} from '@angular/core';\nimport {AssetService} from './asset.service';\nimport {Asset} from '../shared/model/asset';\nimport 'rxjs/add/operator/map';\nimport 'rxjs/add/operator/catch';\nimport 'rxjs/add/operator/debounceTime';\nimport 'rxjs/add/operator/distinctUntilChanged';\nimport 'rxjs/add/operator/switchMap';\nimport 'rxjs/add/operator/toPromise';\nimport { Router, ActivatedRoute } from '@angular/router';\nimport {GridOptions} from 'ag-grid/main';\nimport { DatePipe } from '@angular/common';\n\n\n@Component({\n    moduleId: module.id,\n    selector: 'ym-list',\n    templateUrl: 'search-asset.component.html',\n    styleUrls: ['search-asset.component.css'],\n})\n\nexport class ListComponent implements OnInit {\n    @Input()\n    public allocatedAssetsList:Asset[] = [];\n    cell:any;\n    isResult = false;\n    noResultIcon = '';\n    noResultFound = '';\n    mode = 'Observable';\n    public errorMessage = '';\n    public selectedId:string;\n\n    private gridOptions:GridOptions = <GridOptions>{};\n\n    constructor(private assetService:AssetService,\n                private router:Router,\n                private route:ActivatedRoute,\n                private datePipe:DatePipe) {\n    }\n\n    ngOnInit() {\n        this.gridOptions.context = {\n            assetService: this.assetService,\n            gridOptions: this.gridOptions,\n            datePipe: this.datePipe,\n            createDataRows: this.createDataRows,\n            router: this.router\n        };\n\n        this.route.data.forEach((data:{ assets: Asset[]}) => {\n            if (data.assets.length > 0) {\n                this.gridOptions.columnDefs = this.createColumnDefs(data.assets[0]);\n                this.gridOptions.rowData = this.createDataRows(data.assets);\n                this.isResult = true;\n            } else {\n                this.noResultIcon = '../../assets/images/warning.png';\n                this.noResultFound = '../../assets/images/no-result.png';\n                this.isResult = false;\n            }\n        });\n    }\n\n\n\n    editAsset(params) {\n        var eDiv = document.createElement('div');\n        eDiv.innerHTML = '<button style=\"font-size: inherit; margin-top: -6%;\" class=\"btn btn-sm btn-default btn-simple\">Edit' +\n            '</button><button style = \"margin-left: 3%; font-size: inherit; color: white;margin-top: -6%;\" class=\"btn btn-sm btn-danger return\">Return</button>';\n        var eButton = eDiv.querySelectorAll('.btn-simple')[0];\n        var rButton = eDiv.querySelectorAll('.return')[0];\n\n        if (params.data.dateOfReturn !== null) {\n            rButton.setAttribute('disabled', 'true');\n        }\n\n        eButton.addEventListener('click', function () {\n            params.context.router.navigate(['/admin/asset/edit', params.data._id]);\n        });\n\n        rButton.addEventListener('click', function () {\n            rButton.removeAttribute('disabled');\n            params.context.assetService.returnAsset(params.data._id).subscribe(data => {\n                    params.context.assetService.listAllAsset().subscribe(rows => {\n                            let dataRows = params.context.createDataRows(rows);\n                            params.context.gridOptions.api.setRowData(dataRows)\n                            swal({\n                                title: 'Asset Returned Successfully.',\n                                text: 'Auto close in 1 second.',\n                                timer: 1000,\n                                showConfirmButton: false\n                            }).done();\n                        },\n                        error => {\n                            swal(\n                                'error',\n                                '' + JSON.stringify(error),\n                                'error'\n                            );\n                        });\n                },\n                error => {\n                    swal(\n                        'error',\n                        '' + JSON.stringify(error),\n                        'error'\n                    );\n                });\n        });\n        return eDiv;\n    }\n\n    getHeaderName(key:string) {\n        let newKey = key;\n        let capsLetterArray = key.match(/[A-Z]/);\n        if (capsLetterArray !== null) {\n            capsLetterArray.map(capitalLetter => key = key.replace(capitalLetter, ' ' + capitalLetter.toLowerCase()));\n            newKey = this.getHeaderName(key);\n        }\n        return newKey;\n    }\n\n    /**\n     * This method returns rows for the ag-Grid\n     * @param assets\n     * @returns {Array}\n     */\n    private createDataRows(assets) {\n        let updatedAssets = [];\n        for (let i in assets) {\n            updatedAssets.push({\n                _id: assets[i]._id,\n                empId: assets[i].empId,\n                empName: assets[i].empName,\n                assetType: assets[i].assetType,\n                model: assets[i].model,\n                assetCode: assets[i].assetCode,\n                serialNumber: assets[i].serialNumber,\n                shippingDate: this.datePipe.transform(assets[i].shippingDate, 'yyyy-MM-dd'),\n                dateOfIssue: this.datePipe.transform(assets[i].dateOfIssue, 'yyyy-MM-dd'),\n                dateOfReturn: this.datePipe.transform(assets[i].dateOfReturn, 'yyyy-MM-dd'),\n                warrantyEndDate: this.datePipe.transform(assets[i].warrantyEndDate, 'yyyy-MM-dd'),\n                lastMaintenanceDate: this.datePipe.transform(assets[i].lastMaintenanceDate, 'yyyy-MM-dd'),\n                specs: assets[i].specs,\n                isAvailable: assets[i].isAvailable,\n                update: assets[i].update\n            });\n        }\n        return updatedAssets;\n    }\n\n    /**\n     * This method returns column headers for ag-Grid\n     * @param asset\n     * @returns {Array}\n     */\n    private createColumnDefs(asset) {\n        let keyNames = Object.keys(asset);\n        let headers = [];\n        keyNames.filter(key => key !== '__v' && key !== '_id').map(key => {\n            if (key === 'specs') {\n                headers.push({\n                    headerName: 'SPECIFICATIONS',\n                    children: [\n                        {headerName: 'HD', field: 'specs.HD', width: 100},\n                        {headerName: 'RAM', field: 'specs.RAM', width: 100},\n                        {headerName: 'PROCESSOR', field: 'specs.Processor', width: 100}\n                    ]\n                });\n            } else {\n                headers.push({\n                    headerName: this.getHeaderName(key).toLocaleUpperCase(),\n                    field: key,\n                    width: 140\n                });\n            }\n        });\n\n        headers.push({\n            headerName: 'UPDATE',\n            field: 'update',\n            cellRenderer: this.editAsset,\n            pinned: 'right',\n            width: 140\n        });\n        return headers;\n    }\n}\n"]}