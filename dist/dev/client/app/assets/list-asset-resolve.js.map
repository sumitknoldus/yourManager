{"version":3,"sources":["assets/list-asset-resolve.ts"],"names":[],"mappings":";;;;;;;;;;AAAA,qBAAuC,eAAe,CAAC,CAAA;AACvD,uBAAwD,iBAAiB,CAAC,CAAA;AAE1E,8BAA2B,iBAAiB,CAAC,CAAA;AAI7C;IAEE,0BAAoB,YAA0B,EAAU,MAAc;QAAlD,iBAAY,GAAZ,YAAY,CAAc;QAAU,WAAM,GAAN,MAAM,CAAQ;IAAG,CAAC;IAE1E;;;;OAIG;IACH,kCAAO,GAAP,UAAQ,KAA6B;QACnC,MAAM,CAAC,IAAI,CAAC,YAAY,CAAC,YAAY,EAAE,CAAC,GAAG,CAAE,UAAA,MAAM;YAC/C,EAAE,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC;gBACX,MAAM,CAAC,MAAM,CAAC;YAChB,CAAC;YAAC,IAAI,CAAC,CAAC;gBACN,MAAM,CAAC,KAAK,CAAC;YACf,CAAC;QACH,CAAC,CACF,CAAC;IACJ,CAAC;IAnBH;QAAC,iBAAU,EAAE;;wBAAA;IAoBb,uBAAC;AAAD,CAnBA,AAmBC,IAAA;AAnBY,wBAAgB,mBAmB5B,CAAA","file":"list-asset-resolve.js","sourcesContent":["import { Injectable }             from '@angular/core';\nimport { Router, Resolve, ActivatedRouteSnapshot } from '@angular/router';\nimport { Observable }             from 'rxjs/Observable';\nimport {AssetService} from './asset.service';\nimport {Asset} from '../shared/model/asset';\n\n@Injectable()\nexport class ListAssetResolve implements Resolve<Asset[]> {\n\n  constructor(private assetService: AssetService, private router: Router) {}\n\n  /**\n   * This method calls the service to get all assets.\n   * @param route\n   * @returns {any}\n   */\n  resolve(route: ActivatedRouteSnapshot): Observable<> | Promise<any> | any {\n    return this.assetService.listAllAsset().map( assets => {\n        if (assets) {\n          return assets;\n        } else {\n          return false;\n        }\n      }\n    );\n  }\n}\n"]}