{"version":3,"sources":["assets/assign-asset.component.ts"],"names":[],"mappings":"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","file":"assign-asset.component.js","sourcesContent":["import { Component, Input, OnInit } from '@angular/core';\nimport { Router, ActivatedRoute, Params } from '@angular/router';\nimport {Asset} from \"../shared/model/asset\";\nimport {User} from \"../shared/model/user\";\nimport {AssetService} from \"./asset.service\";\nimport 'rxjs/add/observable/throw';\nimport {DateTime} from \"ng2-datetime-picker\";\n\n@Component({\n  moduleId:module.id,\n  selector: 'ym-assign-asset',\n  templateUrl: 'assign-asset.component.html',\n  styleUrls: ['add-asset.component.css']\n})\n\nexport class AssignAssetComponent{\n  assetCode = \"\";\n  objId = \"\";\n  isEmpDataAvailable = false;\n  assignNewAsset = false;\n  constructor(private assetService: AssetService, private router: Router, private route: ActivatedRoute){}\n\n  ngOnInit(){\n    this.route.data.forEach(data => {\n      this.isEmpDataAvailable = true;\n      this.users = data.assets;\n    });\n\n    this.route.params.forEach((params: Params) => {\n      if(params['assetCode'] != null) {\n        this.objId = params['assetCode'];\n        this.assignNewAsset = true;\n      }\n    });\n\n    if(this.objId != \"\"){\n      this.getAsset(this.objId)\n    }\n  }\n  isAssets: boolean= true;\n  hardwareTypes = [ \"Mouse\", \"Keyboard\", \"Laptop\", \"Monitor\", \"Adapter\", \"Laptop Stand\", \"Bag\"]\n  isAssign: boolean = true;\n\n  availableAssets = {};\n\n  objectId = \"\";\n\n  asset:Asset = new Asset;\n\n  users = [{}];\n  selectedEmployee = {assetType:'',empId:''};\n  errorMsg = false;\n  users:User = new User;\n\n  verifyUserRequest(){\n    this.selectedEmployee.empId = this.asset.empId;\n    this.selectedEmployee.assetType = this.asset.assetType;\n    this.assetService.verifyUserRequest(this.selectedEmployee).subscribe(data => {\n      if(data.status === 203){\n        this.errorMsg = true;\n        //this.asset = {}\n      }\n      else{\n        this.errorMsg = false;\n      }\n    },error => swal(\n      'Error',\n      ''+JSON.stringify(error),\n      'error'\n    ))\n  }\n\n\n  /**\n   * This method is called when user selects an asset type,\n   * it calls the service method to get all the available assets of that type.\n   * @param asset\n   */\n  getAvailableAssetList(asset: string){\n    this.asset = new Asset;\n    this.asset.assetType = asset;\n    this.selectedEmployee.empId = '';\n    this.assignNewAsset = false;\n    this.errorMsg = false;\n    if(asset!=\"\"){\n      this.assetService.getAvailableAssetList(asset).subscribe(\n        data => {\n          this.availableAssets = data;\n          if(this.availableAssets.availableStock === 0){\n            this.isAssets = false;\n          }\n          else{\n            this.isAssets = true;\n          }\n        },\n        error => swal(\n          'error',\n          ''+JSON.stringify(error),\n          'error'\n        )\n      )\n    }\n  }\n\n  /**\n   * This method calls the service method to assign an asset\n   * @param asset\n   */\n  submit() {\n    let user = this.users.find(user => user.empId === this.asset.empId)\n\n    if(user.middleName == null) {\n      this.asset.empName = user.firstName + ' ' +user.lastName;\n    } else {\n      this.asset.empName = user.firstName + ' ' + user.middleName + ' ' +user.lastName;\n    }\n    this.asset.isAvailable = false;\n\n    DateTime.parse = (str: any) => moment(str).toDate();\n\n\n    let doi = DateTime.parse(this.asset.dateOfIssue);\n    this.asset.dateOfIssue = DateTime.formatDate(doi, true);\n\n\n    let sd = DateTime.parse(this.asset.shippingDate);\n    this.asset.shippingDate = DateTime.formatDate(sd, true);\n\n    if(this.asset.assetType == 'Laptop'){\n      let wed = DateTime.parse(this.asset.warrantyEndDate);\n      this.asset.warrantyEndDate = DateTime.formatDate(wed, true);\n    } else{\n      this.asset.warrantyEndDate = \"\";\n    }\n\n\n    if(this.asset.lastMaintenanceDate != \"\"){\n      let lmt = DateTime.parse(this.asset.lastMaintenanceDate);\n      this.asset.lastMaintenanceDate = DateTime.formatDate(lmt, true);\n    }\n\n    this.assetService.assignAsset(this.objectId, this.asset).subscribe(data =>\n      {\n        this.router.navigate(['admin/asset/list']);\n      },\n      error => swal(\n        'error',\n        ''+JSON.stringify(error),\n        'error'\n      )\n    )\n  }\n\n  /**\n   * This method is called when a user selects an assetCode from the available asset list,\n   * and calls service to get asset corresponding to that assetCode.\n   * @param assetCode\n   */\n  getAsset(assetCode: string) {\n    let objId;\n    if(assetCode != \"\"){\n      if(this.objId == \"\"){\n        objId = this.availableAssets.assetList.find(record => record.assetCode === assetCode)._id\n      } else {\n        objId = this.objId\n      }\n      this.assetService.getById(objId).subscribe(data =>{\n          this.asset.assetType= data.assetType;\n          this.asset.model= data.model;\n          this.asset.specs.HD = data.specs.HD;\n          this.asset.specs.Processor = data.specs.Processor;\n          this.asset.specs.RAM = data.specs.RAM;\n          this.asset.serialNumber= data.serialNumber;\n          this.objectId = data._id;\n\n          if(this.assignNewAsset == true) this.asset.assetCode = data.assetCode;\n          DateTime.formatDate = (date: Date) => moment(date).format('YYYY-MM-DD');\n          this.asset.shippingDate = DateTime.formatDate(data.shippingDate, true);\n          if(data.lastMaintenanceDate != null) {\n            this.asset.lastMaintenanceDate = DateTime.formatDate(data.lastMaintenanceDate, true);\n          }\n          if(data.warrantyEndDate!= null) {\n            this.asset.warrantyEndDate = DateTime.formatDate(data.warrantyEndDate, true);\n          }\n        },\n        error => swal(\n          'error',\n          ''+JSON.stringify(error),\n          'error'\n        )\n      )\n    }\n  }\n\n}\n"]}