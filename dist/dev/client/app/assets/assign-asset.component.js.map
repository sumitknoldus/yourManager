{"version":3,"sources":["assets/assign-asset.component.ts"],"names":[],"mappings":"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","file":"assign-asset.component.js","sourcesContent":["import { Component } from '@angular/core';\nimport { Router, ActivatedRoute, Params } from '@angular/router';\nimport {Asset} from '../shared/model/asset';\nimport {User} from '../shared/model/user';\nimport {AssetService} from './asset.service';\nimport 'rxjs/add/observable/throw';\nimport {DateTime} from 'ng2-datetime-picker';\n\n@Component({\n    moduleId: module.id,\n    selector: 'ym-assign-asset',\n    templateUrl: 'assign-asset.component.html',\n    styleUrls: ['add-asset.component.css']\n})\n\nexport class AssignAssetComponent {\n    isAssets:boolean = true;\n    hardwareTypes = ['Mouse', 'Keyboard', 'Laptop', 'Monitor', 'Adapter', 'Laptop Stand', 'Bag'];\n    isAssign:boolean = true;\n    availableAssets = {};\n    objectId = '';\n    asset:Asset = new Asset;\n    assetCode = '';\n    objId = '';\n    isEmpDataAvailable = false;\n    assignNewAsset = false;\n    users = [{}];\n    selectedEmployee = {assetType: '', empId: ''};\n    errorMsg = false;\n    users:User = new User;\n\n    constructor(private assetService:AssetService, private router:Router, private route:ActivatedRoute) {\n    }\n\n    ngOnInit() {\n        this.route.data.forEach(data => {\n            this.isEmpDataAvailable = true;\n            this.users = data.assets;\n        });\n\n        this.route.params.forEach((params:Params) => {\n            if (params.assetCode) {\n                this.objId = params['assetCode'];\n                this.assignNewAsset = true;\n            }\n        });\n\n        console.log('---------' + this.objId +'+++++++')\n\n        if (this.objId !== '') {\n            this.getAsset(this.objId);\n        }\n    }\n    verifyUserRequest() {\n        this.selectedEmployee.empId = this.asset.empId;\n        this.selectedEmployee.assetType = this.asset.assetType;\n        this.assetService.verifyUserRequest(this.selectedEmployee).subscribe(data => {\n            if (data.status === 203) {\n                this.errorMsg = true;\n            } else {\n                this.errorMsg = false;\n            }\n        }, error => swal(\n            'Error',\n            '' + JSON.stringify(error),\n            'error'\n        ));\n    }\n\n\n    /**\n     * This method is called when user selects an asset type,\n     * it calls the service method to get all the available assets of that type.\n     * @param asset\n     */\n    getAvailableAssetList(asset:string) {\n        this.asset = new Asset;\n        this.asset.assetType = asset;\n        this.selectedEmployee.empId = '';\n        this.assignNewAsset = false;\n        this.errorMsg = false;\n        if (asset !== '') {\n            this.assetService.getAvailableAssetList(asset).subscribe(\n                data => {\n                    this.availableAssets = data;\n                    if (this.availableAssets.availableStock === 0) {\n                        this.isAssets = false;\n                    } else {\n                        this.isAssets = true;\n                    }\n                },\n                error => swal(\n                    'error',\n                    '' + JSON.stringify(error),\n                    'error'\n                )\n            );\n        }\n    }\n\n    /**\n     * This method calls the service method to assign an asset\n     * @param asset\n     */\n    submit() {\n        let user = this.users.find(user => user.empId === this.asset.empId);\n\n        if (!user.middleName) {\n            this.asset.empName = user.firstName + ' ' + user.lastName;\n        } else {\n            this.asset.empName = user.firstName + ' ' + user.middleName + ' ' + user.lastName;\n        }\n        this.asset.isAvailable = false;\n\n        DateTime.parse = (str:any) => moment(str).toDate();\n\n\n        let doi = DateTime.parse(this.asset.dateOfIssue);\n           this.asset.dateOfIssue = DateTime.formatDate(doi, true);\n\n\n        let sd = DateTime.parse(this.asset.shippingDate);\n        this.asset.shippingDate = DateTime.formatDate(sd, true);\n\n        if (this.asset.assetType === 'Laptop') {\n            let wed = DateTime.parse(this.asset.warrantyEndDate);\n            this.asset.warrantyEndDate = DateTime.formatDate(wed, true);\n        } else {\n            this.asset.warrantyEndDate = '';\n        }\n\n\n        if (this.asset.lastMaintenanceDate !== '') {\n            let lmt = DateTime.parse(this.asset.lastMaintenanceDate);\n            this.asset.lastMaintenanceDate = DateTime.formatDate(lmt, true);\n        }\n\n        this.assetService.assignAsset(this.objectId, this.asset).subscribe(data => {\n                this.router.navigate(['admin/asset/list']);\n            },\n            error => swal(\n                'error',\n                '' + JSON.stringify(error),\n                'error'\n            )\n        );\n    }\n\n    /**\n     * This method is called when a user selects an assetCode from the available asset list,\n     * and calls service to get asset corresponding to that assetCode.\n     * @param assetCode\n     */\n    getAsset(assetCode:string) {\n        let objId;\n        if (assetCode !== '') {\n            if (this.objId === '') {\n                objId = this.availableAssets.assetList.find(record => record.assetCode === assetCode)._id;\n            } else {\n                objId = this.objId;\n            }\n            this.assetService.getById(objId).subscribe(data => {\n                    this.asset.assetType = data.assetType;\n                    this.asset.model = data.model;\n                    this.asset.specs.HD = data.specs.HD;\n                    this.asset.specs.Processor = data.specs.Processor;\n                    this.asset.specs.RAM = data.specs.RAM;\n                    this.asset.serialNumber = data.serialNumber;\n                    this.objectId = data._id;\n\n                    if (this.assignNewAsset === true) this.asset.assetCode = data.assetCode;\n                    DateTime.formatDate = (date:Date) => moment(date).format('YYYY-MM-DD');\n                    this.asset.shippingDate = DateTime.formatDate(data.shippingDate, true);\n                    if (data.lastMaintenanceDate !== null) {\n                        this.asset.lastMaintenanceDate = DateTime.formatDate(data.lastMaintenanceDate, true);\n                    }\n                    if (data.warrantyEndDate !== null) {\n                        this.asset.warrantyEndDate = DateTime.formatDate(data.warrantyEndDate, true);\n                    }\n                },\n                error => swal(\n                    'error',\n                    '' + JSON.stringify(error),\n                    'error'\n                )\n            );\n        }\n    }\n\n}\n"]}