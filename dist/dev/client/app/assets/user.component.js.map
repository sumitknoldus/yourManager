{"version":3,"sources":["assets/user.component.ts"],"names":[],"mappings":"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","file":"user.component.js","sourcesContent":["import {Component} from '@angular/core';\n\nimport {Router, ActivatedRoute, Params} from \"@angular/router\";\nimport {AssetService} from \"./asset.service\";\nimport {OnInit} from \"angular2/core\";\nimport {GridOptions} from \"ag-grid/main\";\nimport {Asset} from \"../shared/model/asset\";\nimport { Observable } from 'rxjs/Rx';\n\n@Component({\n  moduleId:module.id,\n  selector: 'user',\n  templateUrl: 'user.component.html',\n  styleUrls:['search-asset.component.css'],\n})\n\nexport class UserComponent {\n\n  private gridOptions:GridOptions =  <GridOptions>{};\n  private columnDefs = [];\n  private rowData = [];\n  message = \"\";\n  adminMessage = \"\";\n  id;\n\n  constructor(private assetService: AssetService, private route: ActivatedRoute){}\n  headers = [];\n  isResult = false;\n  noResultIcon ='';\n  noResultFound='';\n  ngOnInit() {\n\n    this.id = JSON.parse(localStorage.getItem('user')).empId;\n    if(this.id != ''){\n      this.assetService.getAllocatedAssets(this.id).subscribe(\n        assets => {\n          if(assets.length > 0) {\n            this.columnDefs = this.createColumnDefs(assets[0]);\n            this.rowData = this.createDataRows(assets);\n            this.isResult = true;\n          } else {\n            this.adminMessage = \"Contact Admin to get your records added.\";\n            this.noResultIcon = \"../../assets/images/warning.png\";\n            this.noResultFound = \"../../assets/images/no-result.png\";\n            this.isResult = false;\n          }\n        },\n        error => alert(error)\n      )\n    } else{\n      this.adminMessage = \"Contact Admin to get your records added.\";\n      let name = JSON.parse(localStorage.getItem('user')).firstName;\n      if(localStorage.getItem('message')){\n        this.message = \"Welcome \" + name + \", you have successfully signed up.\";\n      }\n      let timer = Observable.timer(3000);\n      timer.subscribe(data => this.message = \"\");\n      this.noResultIcon = \"../../assets/images/warning.png\";\n      this.noResultFound = \"../../assets/images/no-result.png\";\n    }\n\n  }\n\n  /**\n   * This method returns column headers for ag-Grid\n   * @param asset\n   * @returns {Array}\n   */\n  private createColumnDefs(asset) {\n    let keyNames = Object.keys(asset);\n    let headers = [];\n    keyNames.filter(key => key != '__v' && key != '_id').map(key => {\n      headers.push({\n        headerName: key,\n        field: key,\n        width: 100\n      })\n    });\n\n    return headers;\n  }\n\n  /**\n   * This method returns rows for the ag-Grid\n   * @param assets\n   * @returns {Array}\n   */\n  private createDataRows(assets) {\n    let updatedAssets = [];\n    for(let i in assets){\n      updatedAssets.push({\n        _id:assets[i]._id,\n        empId:assets[i].empId,\n        empName: assets[i].empName,\n        assetType: assets[i].assetType,\n        model: assets[i].model,\n        assetCode: assets[i].assetCode,\n        shippingDate: assets[i].shippingDate,\n        dateOfIssue: assets[i].dateOfIssue,\n        dateOfReturn: assets[i].dateOfReturn,\n        warrantyEndDate:assets[i].warrantyEndDate,\n        lastMaintenanceDate:assets[i].lastMaintenanceDate,\n        specs: JSON.stringify(assets[i].specs),\n        isAvailable:assets[i].isAvailable,\n        update:assets[i].update\n      })\n    }\n    return updatedAssets;\n  }\n\n\n}\n\n"]}