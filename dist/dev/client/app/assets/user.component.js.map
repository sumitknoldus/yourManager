{"version":3,"sources":["assets/user.component.ts"],"names":[],"mappings":"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","file":"user.component.js","sourcesContent":["import {Component} from '@angular/core';\n\nimport {Router, ActivatedRoute} from '@angular/router';\nimport {AssetService} from './asset.service';\nimport {GridOptions} from 'ag-grid/main';\nimport { Observable } from 'rxjs/Rx';\nimport {DatePipe} from '@angular/common';\n\n@Component({\n  moduleId:module.id,\n  selector: 'user',\n  templateUrl: 'user.component.html',\n  styleUrls:['search-asset.component.css'],\n})\n\nexport class UserComponent {\n\n  private gridOptions:GridOptions =  <GridOptions>{};\n  private columnDefs = [];\n  private rowData = [];\n  message = \"\";\n  adminMessage = \"\";\n  id;\n  headers = [];\n  isResult = false;\n  noResultIcon ='';\n  noResultFound='';\n\n  constructor(private assetService: AssetService, private route: ActivatedRoute, private datePipe: DatePipe){}\n\n  ngOnInit() {\n\n    this.id = JSON.parse(localStorage.getItem('user')).empId;\n    if(this.id != ''){\n      this.assetService.getAllocatedAssets(this.id).subscribe(\n        assets => {\n          if(assets.length > 0) {\n            this.columnDefs = this.createColumnDefs(assets[0]);\n            this.rowData = this.createDataRows(assets);\n            this.isResult = true;\n          } else {\n            this.adminMessage = \"Contact Admin to get your records added.\";\n            this.noResultIcon = \"../../assets/images/warning.png\";\n            this.noResultFound = \"../../assets/images/no-result.png\";\n            this.isResult = false;\n          }\n        },\n        error => alert(error)\n      )\n    } else{\n      this.adminMessage = \"Contact Admin to get your records added.\";\n      let name = JSON.parse(localStorage.getItem('user')).firstName;\n      if(localStorage.getItem('message')){\n        this.message = \"Welcome \" + name + \", you have successfully signed up.\";\n      }\n      let timer = Observable.timer(3000);\n      timer.subscribe(data => this.message = \"\");\n      this.noResultIcon = \"../../assets/images/warning.png\";\n      this.noResultFound = \"../../assets/images/no-result.png\";\n    }\n\n  }\n\n  /**\n   * This method returns column headers for ag-Grid\n   * @param asset\n   * @returns {Array}\n   */\n  private createColumnDefs(asset) {\n    let keyNames = Object.keys(asset);\n    let headers = [];\n    keyNames.filter(key => key != '__v' && key != '_id').map(key => {\n      if(key == 'specs') {\n        headers.push({\n          headerName: 'SPECIFICATIONS',\n          children: [\n            {headerName : 'HD', field : 'specs.HD', width : 100},\n            {headerName : 'RAM', field : 'specs.RAM', width : 100},\n            {headerName : 'PROCESSOR', field : 'specs.Processor', width : 100}\n          ]\n        });\n      } else {\n        headers.push({\n          headerName: this.getHeaderName(key).toLocaleUpperCase(),\n          field: key,\n          width: 140\n        });\n      };\n    });\n\n    return headers;\n  }\n\n  getHeaderName(key: string) {\n    let newKey = key;\n    let capsLetterArray  = key.match(/[A-Z]/);\n    if(capsLetterArray !== null) {\n      capsLetterArray.map(capitalLetter => key = key.replace(capitalLetter, ' '+capitalLetter.toLowerCase()));\n      newKey = this.getHeaderName(key);\n    }\n    return newKey;\n  }\n\n  /**\n   * This method returns rows for the ag-Grid\n   * @param assets\n   * @returns {Array}\n   */\n  private createDataRows(assets) {\n    let updatedAssets = [];\n    for(let i in assets){\n      updatedAssets.push({\n        _id:assets[i]._id,\n        empId:assets[i].empId,\n        empName: assets[i].empName,\n        assetType: assets[i].assetType,\n        model: assets[i].model,\n        assetCode: assets[i].assetCode,\n        shippingDate: this.datePipe.transform(assets[i].shippingDate, 'yyyy-MM-dd'),\n        dateOfIssue: this.datePipe.transform(assets[i].dateOfIssue, 'yyyy-MM-dd'),\n        dateOfReturn: this.datePipe.transform(assets[i].dateOfReturn, 'yyyy-MM-dd'),\n        warrantyEndDate: this.datePipe.transform(assets[i].warrantyEndDate, 'yyyy-MM-dd'),\n        lastMaintenanceDate: this.datePipe.transform(assets[i].lastMaintenanceDate, 'yyyy-MM-dd'),\n        specs: JSON.stringify(assets[i].specs),\n        isAvailable:assets[i].isAvailable,\n        update:assets[i].update\n      });\n    }\n    return updatedAssets;\n  }\n\n\n}\n\n"]}