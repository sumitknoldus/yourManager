{"version":3,"sources":["assets/list-new-asset-resolve.ts"],"names":[],"mappings":";;;;;;;;;;AAAA,qBAAuC,eAAe,CAAC,CAAA;AACvD,uBAAwD,iBAAiB,CAAC,CAAA;AAE1E,8BAA2B,iBAAiB,CAAC,CAAA;AAI7C;IAEE,6BAAoB,YAA0B,EAAU,MAAc;QAAlD,iBAAY,GAAZ,YAAY,CAAc;QAAU,WAAM,GAAN,MAAM,CAAQ;IAAG,CAAC;IAE1E;;;;OAIG;IACH,qCAAO,GAAP,UAAQ,KAA6B;QACnC,MAAM,CAAC,IAAI,CAAC,YAAY,CAAC,aAAa,EAAE,CAAC,GAAG,CAAE,UAAA,MAAM;YAChD,EAAE,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC;gBACX,MAAM,CAAC,MAAM,CAAA;YACf,CAAC;YAAC,IAAI,CAAC,CAAC;gBACN,MAAM,CAAC,KAAK,CAAA;YACd,CAAC;QACH,CAAC,CACF,CAAA;IACH,CAAC;IAnBH;QAAC,iBAAU,EAAE;;2BAAA;IAoBb,0BAAC;AAAD,CAnBA,AAmBC,IAAA;AAnBY,2BAAmB,sBAmB/B,CAAA","file":"list-new-asset-resolve.js","sourcesContent":["import { Injectable }             from '@angular/core';\nimport { Router, Resolve, ActivatedRouteSnapshot } from '@angular/router';\nimport { Observable }             from 'rxjs/Observable';\nimport {AssetService} from \"./asset.service\";\nimport {Asset} from \"../shared/model/asset\";\n\n@Injectable()\nexport class ListNewAssetResolve implements Resolve<Asset[]> {\n\n  constructor(private assetService: AssetService, private router: Router) {}\n\n  /**\n   * This method calls the service to get all assets.\n   * @param route\n   * @returns {any}\n   */\n  resolve(route: ActivatedRouteSnapshot): Observable<> | Promise<any> | any {\n    return this.assetService.listNewAssets().map( assets => {\n        if (assets) {\n          return assets\n        } else {\n          return false\n        }\n      }\n    )\n  }\n}"]}