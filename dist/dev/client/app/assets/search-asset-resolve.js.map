{"version":3,"sources":["assets/search-asset-resolve.ts"],"names":[],"mappings":";;;;;;;;;;AAAA,qBAAuC,eAAe,CAAC,CAAA;AACvD,uBAAwD,iBAAiB,CAAC,CAAA;AAE1E,8BAA2B,iBAAiB,CAAC,CAAA;AAI7C;IAEE,4BAAoB,YAA0B,EAAU,MAAc;QAAlD,iBAAY,GAAZ,YAAY,CAAc;QAAU,WAAM,GAAN,MAAM,CAAQ;IAAG,CAAC;IAE1E;;;;OAIG;IACH,oCAAO,GAAP,UAAQ,KAA6B;QACnC,IAAI,EAAE,GAAG,KAAK,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC;QAC5B,MAAM,CAAC,IAAI,CAAC,YAAY,CAAC,kBAAkB,CAAC,EAAE,CAAC,CAAC,GAAG,CAAE,UAAA,MAAM;YACzD,EAAE,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC;gBACX,MAAM,CAAC,MAAM,CAAA;YACf,CAAC;YAAC,IAAI,CAAC,CAAC;gBACN,MAAM,CAAC,KAAK,CAAA;YACd,CAAC;QACH,CAAC,CACF,CAAA;IACD,CAAC;IApBH;QAAC,iBAAU,EAAE;;0BAAA;IAqBb,yBAAC;AAAD,CApBA,AAoBC,IAAA;AApBY,0BAAkB,qBAoB9B,CAAA","file":"search-asset-resolve.js","sourcesContent":["import { Injectable }             from '@angular/core';\nimport { Router, Resolve, ActivatedRouteSnapshot } from '@angular/router';\nimport { Observable }             from 'rxjs/Observable';\nimport {AssetService} from \"./asset.service\";\nimport {Asset} from \"../shared/model/asset\";\n\n@Injectable()\nexport class SearchAssetResolve implements Resolve<Asset[]> {\n\n  constructor(private assetService: AssetService, private router: Router) {}\n\n  /**\n   * This method calls the service to get assets by ID.\n   * @param route\n   * @returns {any}\n   */\n  resolve(route: ActivatedRouteSnapshot): Observable<> | Promise<any> | any {\n    let id = route.params['id'];\n    return this.assetService.getAllocatedAssets(id).map( assets => {\n      if (assets) {\n        return assets\n      } else {\n        return false\n      }\n    }\n  )\n  }\n}"]}