{"version":3,"sources":["assets/edit-asset.component.ts"],"names":[],"mappings":"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","file":"edit-asset.component.js","sourcesContent":["import { Component } from '@angular/core';\nimport { Router, ActivatedRoute, Params } from '@angular/router';\nimport {Asset} from '../shared/model/asset';\nimport {AssetService} from './asset.service';\nimport 'rxjs/add/observable/throw';\nimport {DateTime} from 'ng2-datetime-picker';\n\n@Component({\n  moduleId:module.id,\n  selector: 'ym-edit-hardware',\n  templateUrl: 'add-asset.component.html',\n  styleUrls: ['add-asset.component.css']\n})\n\nexport class EditAssetComponent {\n    isAssign: boolean = false;\n  hardwareTypes = [ 'Mouse', 'Keyboard', 'Laptop', 'Monitor', 'Adapter', 'Laptop Stand', 'Bag'];\n  isEdit= true;\n  asset = new Asset();\n  selectedHardwareType = '';\n    constructor(private assetService: AssetService, private router: Router, private route: ActivatedRoute) {}\n\n  ngOnInit() {\n    this.route.params.forEach((params: Params) => {\n      let id = params['id'];\n      this.getData(id);\n    });\n  }\n\n  /**\n   * This method calls the service get asset by object ID\n   * @param id\n   */\n  getData(id:string) {\n    this.assetService.getById(id).subscribe(data => {\n        this.asset = data;\n        DateTime.formatDate = (date: Date) => moment(date).format('YYYY-MM-DD');\n        this.asset.shippingDate = DateTime.formatDate(data.shippingDate, true);\n        if(data.lastMaintenanceDate !== null) {\n          this.asset.lastMaintenanceDate = DateTime.formatDate(data.lastMaintenanceDate, true);\n        }\n        if(data.shippingDate !== null) {\n          this.asset.shippingDate = DateTime.formatDate(data.shippingDate, true);\n        }\n        if(data.warrantyEndDate !== null) {\n          this.asset.warrantyEndDate = DateTime.formatDate(data.warrantyEndDate, true);\n        }\n      },\n      error => swal(\n        'error',\n        ''+JSON.stringify(error),\n        'error'\n      )\n    );\n  }\n\n  /**\n   * This method calls the service method to edit a new asset\n   * @param asset\n   */\n  submit(asset: Asset) {\n    this.assetService.editAsset(asset).subscribe(\n      data => this.router.navigate(['admin/asset/list']),\n      error => swal(\n        'error',\n        ''+JSON.stringify(error),\n        'error'\n      )\n    );\n  }\n\n}\n"]}